// Code generated by glojure codegen. DO NOT EDIT.

package generated

import (
	fmt "fmt"
	lang "github.com/glojurelang/glojure/pkg/lang"
)

func init() {
	// reference fmt to avoid unused import error
	_ = fmt.Printf
	ns := lang.FindOrCreateNamespace(lang.NewSymbol("codegen.test.const-number"))
	_ = ns
	// const-number
	{
		tmp0 := lang.NewSymbol("const-number").WithMeta(lang.NewMap(lang.NewKeyword("file"), "codegen/test/const_number.glj", lang.NewKeyword("line"), int(3), lang.NewKeyword("column"), int(6), lang.NewKeyword("end-line"), int(3), lang.NewKeyword("end-column"), int(17), lang.NewKeyword("doc"), "A constant number.", lang.NewKeyword("ns"), lang.FindOrCreateNamespace(lang.NewSymbol("codegen.test.const-number")))).(*lang.Symbol)
		tmp1 := ns.InternWithValue(tmp0, int64(42), true)
		if tmp0.Meta() != nil {
			tmp1.SetMeta(tmp0.Meta().(lang.IPersistentMap))
		}
	}
}
