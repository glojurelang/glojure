// Code generated by glojure codegen. DO NOT EDIT.

package ns_DASH_skip

import (
	fmt "fmt"
	lang "github.com/glojurelang/glojure/pkg/lang"
)

func checkDerefVar(v *lang.Var) any {
	if v.IsMacro() {
		panic(lang.NewIllegalArgumentError(fmt.Sprintf("can't take value of macro: %v", v)))
	}
	return v.Get()
}
func checkArity(args []any, expected int) {
	if len(args) != expected {
		panic(lang.NewIllegalArgumentError("wrong number of arguments (" + fmt.Sprint(len(args)) + ")"))
	}
}

// LoadNS initializes the namespace "codegen.test.ns-skip"
func LoadNS() {
	sym_codegen_DOT_test_DOT_ns_DASH_skip := lang.NewSymbol("codegen.test.ns-skip")
	// reference fmt to avoid unused import error
	_ = fmt.Printf
	ns := lang.FindOrCreateNamespace(sym_codegen_DOT_test_DOT_ns_DASH_skip)
	_ = ns
}
