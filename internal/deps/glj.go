package deps

import (
	"fmt"
	"go/format"
	"os"
)

// GLJ generates a Go main package in glj/cmd/glj/main.go that
// implements the glj command with the project's dependencies and
// packages available.
func (d *Deps) GLJ() error {
	main := fmt.Sprintf(mainTemplate, d.goModName, d.goModName)
	src, err := format.Source([]byte(main))
	if err != nil {
		return err
	}

	if err := os.MkdirAll("./glj/cmd/glj", 0755); err != nil {
		return err
	}

	f, err := os.Create("./glj/cmd/glj/main.go")
	if err != nil {
		return err
	}
	defer f.Close()

	if _, err := f.Write(src); err != nil {
		return err
	}

	return nil
}

const (
	mainTemplate = `
// Code generated by glj. DO NOT EDIT.

package main

import (
	"os"

	"github.com/glojurelang/glojure/pkg/gljmain"

	_ %q
	_ "%s/glj/gljimports"
)

func main() {
	gljmain.Main(os.Args[1:])
}
`
)
